# This file contains pin mappings and reasonable defaults for Prusa i3 MK3S
# printers. It will work with MK3 (non-S) by selecting the alternative filament
# sensor. References to common community mods are included as well.
#
# Note: The Einsy boards sold by Prusa have defective firmware on the
# usb-to-serial chip that makes the boards unusable with Klipper through USB.
# While flashing Klipper firmware must be done over USB, the board can be used
# via serial with no additional modification.
#
# To use this config, the firmware should be compiled for the AVR atmega2560.
# To use via serial, in "make menuconfig" select "Enable extra low-level configuration options"
# and select serial1 (the RasPi serial) or serial2 (MMU port on exp3) when making
# the mcu firmware. See
# https://reprap.org/mediawiki/images/6/6d/EinsyRambo1.1-connectors-j19-p1-p2-p3.png
# for pinouts when wiring.
#
# It is also possible to fix this issue with no ill effect if reverting to non-Klipper
# firmware. See https://github.com/PrusaOwners/mk3-32u2-firmware
# Boards sold by Ultimaker as wel as some clones do not have this problem.
#
# See the example.cfg file for a description of all available parameters.
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


[probe]
pin: PB4
x_offset: 23
y_offset: 5
z_offset: 0.785 #Put Z-offset from 1st layer calibration baby-steps here. This is a positive value instead of negative.
                # So if your prusa was at -1.653 for the z height, you would put 1.653 here. If you adjust it closer you add to this value
speed: 20.0
samples: 3 #Sampling, primarily for bed mesh. 3 is fine for normal PINDA probes.
samples_result: average

[bed_mesh]
speed: 250
horizontal_move_z: 2
mesh_min: 24, 6
mesh_max: 228,210
probe_count: 7,7
relative_reference_index: 25 #Generate mesh relative to center post for nylock.
#mesh_pps: 0,0 #(uncomment)Don't generate interperlated points so our mesh is compatible with nylock calculators like https://pcboy.github.io/g81_relative/
faulty_region_1_min: 85.0, 45.0 # 103,69
faulty_region_1_max: 120.0, 74.0 
faulty_region_2_min: 70, 110 # 103, 137
faulty_region_2_max: 125.0, 165
mesh_pps: 2,2 #comment these two lines out for nylock
algorithm: bicubic

# for every point that is a magnet, check to see if that point is infruenced by the magnet. check the point before and after and see if it makes sense
# For example:
# G1 X103 Y45 Z2 (You need the Z2 before the probe or the probe command won't work.
# PROBE
# Test the X before it, and the x after it. if the value does not make sense, probe incrementally around the point until you can specify a region
# for the magnet's influence
#
# These values are from a routine the prusa firmware uses to determine which points to ignore.
#Point 0, 0 (x, y) position: 1.000000, 1.000000 is Valid 
#Point 1, 0 (x, y) position: 35.000000, 1.000000 is Valid 
#Point 2, 0 (x, y) position: 69.000000, 1.000000 is Valid 
#Point 3, 0 (x, y) position: 103.000000, 1.000000 is Valid 
#Point 4, 0 (x, y) position: 137.000000, 1.000000 is Valid 
#Point 5, 0 (x, y) position: 171.000000, 1.000000 is Valid 
#Point 6, 0 (x, y) position: 205.000000, 1.000000 is Valid 
#Point 0, 1 (x, y) position: 1.000000, 35.000000 is Valid 
#Point 1, 1 (x, y) position: 35.000000, 35.000000 is Valid 
#Point 2, 1 (x, y) position: 69.000000, 35.000000 is Valid 
#Point 3, 1 (x, y) position: 103.000000, 35.000000 is Valid 
#Point 4, 1 (x, y) position: 137.000000, 35.000000 is Valid 
#Point 5, 1 (x, y) position: 171.000000, 35.000000 is Valid 
#Point 6, 1 (x, y) position: 205.000000, 35.000000 is Valid 
#Point 0, 2 (x, y) position: 1.000000, 69.000000 is Valid 
#Point 1, 2 (x, y) position: 35.000000, 69.000000 is Valid 
#Point 2, 2 (x, y) position: 69.000000, 69.000000 is Valid 
#Point 3, 2 (x, y) position: 103.000000, 69.000000 is Magnet 
#Point 4, 2 (x, y) position: 137.000000, 69.000000 is Valid 
#Point 5, 2 (x, y) position: 171.000000, 69.000000 is Valid 
#Point 6, 2 (x, y) position: 205.000000, 69.000000 is Valid 
#Point 0, 3 (x, y) position: 1.000000, 103.000000 is Valid 
#Point 1, 3 (x, y) position: 35.000000, 103.000000 is Valid 
#Point 2, 3 (x, y) position: 69.000000, 103.000000 is Valid 
#Point 3, 3 (x, y) position: 103.000000, 103.000000 is Valid 
#Point 4, 3 (x, y) position: 137.000000, 103.000000 is Magnet 
#Point 5, 3 (x, y) position: 171.000000, 103.000000 is Valid 
#Point 6, 3 (x, y) position: 205.000000, 103.000000 is Valid 
#Point 0, 4 (x, y) position: 1.000000, 137.000000 is Valid 
#Point 1, 4 (x, y) position: 35.000000, 137.000000 is Valid 
#Point 2, 4 (x, y) position: 69.000000, 137.000000 is Valid 
#Point 3, 4 (x, y) position: 103.000000, 137.000000 is Magnet 
#Point 4, 4 (x, y) position: 137.000000, 137.000000 is Valid 
#Point 5, 4 (x, y) position: 171.000000, 137.000000 is Valid 
#Point 6, 4 (x, y) position: 205.000000, 137.000000 is Valid 
#Point 0, 5 (x, y) position: 1.000000, 171.000000 is Valid 
#Point 1, 5 (x, y) position: 35.000000, 171.000000 is Valid 
#Point 2, 5 (x, y) position: 69.000000, 171.000000 is Valid 
#Point 3, 5 (x, y) position: 103.000000, 171.000000 is Valid 
#Point 4, 5 (x, y) position: 137.000000, 171.000000 is Valid 
#Point 5, 5 (x, y) position: 171.000000, 171.000000 is Valid 
#Point 6, 5 (x, y) position: 205.000000, 171.000000 is Valid 
#Point 0, 6 (x, y) position: 1.000000, 205.000000 is Valid 
#Point 1, 6 (x, y) position: 35.000000, 205.000000 is Valid 
#Point 2, 6 (x, y) position: 69.000000, 205.000000 is Valid 
#Point 3, 6 (x, y) position: 103.000000, 205.000000 is Valid 
#Point 4, 6 (x, y) position: 137.000000, 205.000000 is Valid 
#Point 5, 6 (x, y) position: 171.000000, 205.000000 is Valid 
#Point 6, 6 (x, y) position: 205.000000, 205.000000 is Valid 

#Home in lower, lefthand corner.
[homing_override]
gcode:
 G1 Z3
 G28 X0 Y200
 G1 X0 Y-2.2 F5000
 G28 Z0
 G1 Z0.2
axes: Z
set_position_x: 0
set_position_y: -2.2
set_position_z: 0.2

[gcode_macro G80]
gcode:
# G28 #Avoid double homing if using PrusaSlicer or other default gcode.
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z0.4 F4000

[gcode_macro G81]
gcode:
 BED_MESH_OUTPUT

[stepper_x]
step_pin: PC0
dir_pin: !PL0
enable_pin: !PA7
#Step distances for common configurations, 16 tooth and 1.8 degree is Prusa.stock, but many people have 0.9 degree steppers to remove VFAs.
step_distance: .01 #16 pin tooth wheel, 1.8 degree stepper.
#step_distance: .0125 #20 tooth drive wheel, 1.8 degree stepper.
#step_distance: 0.00625 #20 tooth drive wheel. 0.9 degree stepper.
#step_distance: .005 #16 tooth drive wheel, 0.9 degree stepper.
endstop_pin: tmc2130_stepper_x:virtual_endstop
position_endstop: 0
position_max: 255
homing_speed: 50
homing_retract_dist: 0

[tmc2130 stepper_x]
cs_pin: PG0
microsteps: 16
interpolate: True
run_current: .281738
hold_current: .281738
sense_resistor: 0.220
diag1_pin: !PK2
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_y]
step_pin: PC1
dir_pin: PL1
enable_pin: !PA6
#Step distances for common configurations, 16 tooth and 1.8 degree is Prusa.stock, but many people have 0.9 degree steppers to remove VFAs.
step_distance: .01 #16 pin tooth wheel, 1.8 degree stepper.
#step_distance: .0125 #20 tooth drive wheel, 1.8 degree stepper.
#step_distance: 0.00625 #20 tooth drive wheel. 0.9 degree stepper.
#step_distance: .005 #16 tooth drive wheel, 0.9 degree stepper.
endstop_pin: tmc2130_stepper_y:virtual_endstop
position_endstop: -4
position_max: 212.5
position_min: -4
homing_speed: 50
homing_retract_dist: 0

[tmc2130 stepper_y]
cs_pin: PG2
microsteps: 16
interpolate: True
run_current: .281738
hold_current: .281738
#Run at the same current as X-axis for lower noise, and to keep steppers cooler.
#This should work, but if Y starts skipping steps, you may need to bump up to Prusa stock.
#run_current: .3480291
#hold_current: .3480291
sense_resistor: 0.220
diag1_pin: !PK7
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
#driver_PWM_AMPL: 235
driver_PWM_AMPL: 235
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_z]
step_pin: PC2
dir_pin: !PL2
enable_pin: !PA5
step_distance: .0025
endstop_pin: probe:z_virtual_endstop
#Please update the Z height in the Tram_Z macro below.
position_max: 211 #This is the MK3S default +1 to eliminate errors I discovered.
#position_max: 210 #Use this for a stock MK3 non-S, BMG, or Bear extruders for the MK3S.
position_min: 0.0
homing_speed: 13.333

[tmc2130 stepper_z]
cs_pin: PK5
microsteps: 16
interpolate: True
run_current: .53033
hold_current: .53033
sense_resistor: 0.220
diag1_pin: !PK6
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 200
driver_PWM_AUTOSCALE: True
driver_SGT: 4

[extruder]
step_pin: PC3
dir_pin: PL6
enable_pin: !PA4
step_distance: .0035714 #Stock Prusa or Bear extruder.
#step_distance: .0012048 #BMG or other 3:1 ratio extruder.
nozzle_diameter: 0.400
pressure_advance: 0.0468 # These are my pressure advance settings, you will likely need to find your own yor each filament. 
pressure_advance_smooth_time: 0.040000
filament_diameter: 1.750
# The max extrude cross section is increased for the purge line, but in theory
# its probably a bad idea to have it this large, as its purpose is to catch
# poorly sliced objects that extrude too much for small moves.
max_extrude_cross_section: 50.0
# Allows to load filament and purge up to 500mm
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 1250.0
heater_pin: PE5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF0
control: pid
pid_Kp: 16.13
pid_Ki: 1.1625
pid_Kd: 56.23
min_temp: 0
max_temp: 305

[tmc2130 extruder]
cs_pin: PK4
microsteps: 32
interpolate: True
run_current: .513757
hold_current: .513757
sense_resistor: 0.220
diag1_pin: !PK3
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 240
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF2
control: pid
pid_Kp: 126.13
pid_Ki: 4.3
pid_Kd: 924.76
min_temp: 0
max_temp: 125

[heater_fan nozzle_cooling_fan]
pin: PH5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

# Part Cooling Fan
[fan]
pin: PH3

[mcu]
serial: /dev/ttyACM0 #Default to USB.

[display]
lcd_type: hd44780
rs_pin: PD5
e_pin: PF7
d4_pin: PF5
d5_pin: PG4
d6_pin: PH7
d7_pin: PG3
encoder_pins: ^PJ1,^PJ2
click_pin: ^!PH6

[printer]
kinematics: cartesian
max_velocity: 500 #It can run this fast, but I'd suggest keeping this around 300-350
max_accel: 4500 # I found this value when tuning input shaping, you may want to go a tad lower, but it can handle this no problem and even up to 7k
max_accel_to_decel: 4500 # Should match value above for consistiency 
max_z_velocity: 20
max_z_accel: 200

[input_shaper]
shaper_freq_x: 38.72  # frequency for the X mark of the test model This is my value for my prusa with a Pitstop v1.1 Extruder, your values will differ
shaper_freq_y: 38.72  # Please refer to the klipper documentation on how to set these values. 
shaper_type: ei

#MK3S Filament IR Barrier Sensor.
[filament_switch_sensor fsensor]
pause_on_runout: True
runout_gcode:
    M118 Filament Runout Detected
    M600
insert_gcode:
    M118 Filament Load Detected
    LOAD_FILAMENT
event_delay: 3.0
pause_delay: 0.01
switch_pin: !PK0

#MK3 (non-S) Filament Sensor.
#[pat9125 fsensor]
#pause_on_runout: True
#runout_gcode:
# M118 Filament Runout Detected
#  M600 X250 Y-3 Z10
#insert_gcode:
# M118 Filament Load Detected
#  LOAD_FILAMENT
#invert_axis: True
#oq_enable: True

[respond]
default_type: command

[pause_resume]

# Keeps Debug LED off / not floating
[static_digital_output debug_led]
pins: !PB7

[output_pin BEEPER_pin]
pin: PH2
pwm: True
value: 0
shutdown_value:0
cycle_time: 0.001
scale: 1000

[gcode_macro _M300]
default_parameter_S=1000
default_parameter_P=100
gcode:
    SET_PIN PIN=BEEPER_pin VALUE={S}
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro _M600]
variable_extr_temp: 0
default_parameter_X: 100
default_parameter_Y: 0
default_parameter_Z: 10
gcode:
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000

#Load and Unload Macros.
[gcode_macro LOAD_FILAMENT]
gcode:
    M117 Loading Filament...
    G92 E0.0
    G91
    G1 E40 F400
    G1 E30 F400
    G1 E25 F200
    G90
    G92 E0.0
    M400
    M117 Load Complete
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro UNLOAD_FILAMENT]
gcode:
    M117 Unloading Filament...
    G92 E0.0
    G91
    G1 E-45 F5200
    G1 E-15 F1000
    G1 E-20 F1000
    G90
    G92 E0.0
    M400
    M117 Remove Filament Now!
    M300 S300 P1000
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 0
default_parameter_Y: 210
default_parameter_Z: 10
default_parameter_E: 1
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{ Z }
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    G91
    G1 Z10
    G90
    G1 E-1
    G1 X0 Y0
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[display_status]

[force_move]
enable_force_move: TRUE

#This replicates Prusa's calibrate Z funtionality.
[gcode_macro Tram_Z]
gcode:
    G28
    G1 X125 Y105
    G1 Z210 F1000 #Update with Z height.
    FORCE_MOVE STEPPER=stepper_z Distance=10 Velocity=10
    G28 Z

[virtual_sdcard]
path: ~/gcode_files

#If not using with Octoprint remove the menu.
#[menu __main __octoprint]
#type: disabled

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.052500, 0.090000, 0.063333, 0.055000, 0.085833, 0.078333, 0.036667
#*# 	  0.042500, 0.077500, 0.055833, 0.043333, 0.076667, 0.082500, 0.045833
#*# 	  0.059167, 0.073333, 0.024583, -0.026667, 0.043333, 0.070000, 0.043333
#*# 	  0.015000, 0.055833, 0.000000, 0.007500, -0.013333, 0.027500, 0.049167
#*# 	  0.047500, 0.084167, 0.021875, -0.013333, 0.022500, 0.057500, 0.045000
#*# 	  0.039167, 0.083333, 0.038333, 0.018333, 0.041667, 0.050833, 0.044167
#*# 	  0.038333, 0.124167, 0.065833, 0.042500, 0.051667, 0.042500, 0.060833
#*# tension = 0.2
#*# min_x = 24.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 6.0
#*# x_count = 7
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 228.0
